{"version":3,"sources":["core/App/GlobalStyles.js","core/config/routes.js","features/moviesBrowser/moviesBrowserSlice.js","features/moviesBrowser/MovieDetailPage/index.js","features/moviesBrowser/ActorDetailPage/index.js","features/moviesBrowser/ListPage/styled.js","features/moviesBrowser/ListPage/index.js","features/moviesBrowser/MoviesListPage/index.js","features/moviesBrowser/ActorsListPage/index.js","common/Navigation/styled.js","common/Navigation/index.js","features/moviesBrowser/MoviesBrowser/styled.js","common/NotFound/index.js","features/moviesBrowser/MoviesBrowser/index.js","core/App/theme.js","core/App/index.js","reportWebVitals.js","common/api/apiQueries.js","features/moviesBrowser/moviesBrowserSaga.js","core/config/rootSaga.js","core/config/store.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","colors","bodyBackground","toMovie","id","toActor","moviesBrowserSlice","createSlice","name","initialState","requestType","detailItem","page","detailId","itemsList","isLoading","totalPages","reducers","fetchMoviesListData","state","payload","fetchPeopleListData","fetchDetailedMovieData","fetchDetailedPersonData","setTotalPages","pagesAmount","setList","list","setPeopleList","peopleList","setDetailItem","item","fetchDataError","actions","selectMoviesBrowserState","moviesBrowser","selectRequestType","selectPage","selectDetailId","selectList","selectDetailItem","MovieDetailPage","useParams","dispatch","useDispatch","useEffect","movie","useSelector","src","backdrop_path","alt","title","ActorDetailPage","person","profile_path","ListHeader","styled","h1","headers","ListGrid","div","columns","ListPage","header","showPaginator","type","map","listItem","to","MoviesListPage","ActorsListPage","StyledNavigation","nav","navBackground","NavigationList","ul","StyledTitle","img","white","StyledInput","input","mystic","StyledNavWrapper","StyledNavLink","NavLink","attrs","activeClassName","Navigation","Main","main","NotFound","MoviesBrowser","path","component","exact","pallette","navText","breakpoints","tabletPortrait","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getApiKey","version","fetchList","a","link","fetch","response","ok","Error","statusText","json","fetchDetails","fetchListHandler","fetchDetailHandler","moviesBrowserSaga","select","call","put","results","total_pages","detail","detailedItem","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","moviesBrowserReducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2695d89.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n\r\n    *,\r\n    ::after,\r\n    ::before {\r\n        box-sizing: inherit;\r\n        -webkit-font-smoothing: inherit;\r\n    }\r\n\r\n    body {\r\n        overflow-y: scroll;\r\n        background-color: ${({ theme }) => theme.colors.bodyBackground};\r\n        font-family: 'Poppins', sans-serif;\r\n    }\r\n`;","export const toMoviesList = () => `/movies-list`;\r\nexport const toActorsList = () => `/people-list`;\r\nexport const toMovie = ({id} = {id:\":id\"}) => `/movie/${id}`;\r\nexport const toActor = ({id} = {id:\":id\"}) => `/person/${id}`;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst moviesBrowserSlice = createSlice({\r\n    name: 'moviesBrowser',\r\n    initialState: {\r\n        requestType: \"movies\",\r\n        detailItem: {},\r\n        page: 1,\r\n        detailId: 293660,\r\n        itemsList: [],\r\n        isLoading: true,\r\n        totalPages: 1,\r\n    },\r\n    reducers: {\r\n        fetchMoviesListData: (state, { payload: page }) => {\r\n            state.requestType = \"movies\";\r\n            state.page = page || 1;\r\n            state.isLoading = true;\r\n        },\r\n        fetchPeopleListData: (state, { payload: page }) => {\r\n            state.requestType = \"people\";\r\n            state.page = page || 1;\r\n            state.isLoading = true;\r\n        },\r\n        fetchDetailedMovieData: (state, { payload: id }) => {\r\n            state.requestType = \"movie\";\r\n            state.detailId = id || 293660;\r\n            state.isLoading = true;\r\n        },\r\n        fetchDetailedPersonData: (state, { payload: id }) => {\r\n            state.requestType = \"person\";\r\n            state.detailId = id || 10859;\r\n            state.isLoading = true;\r\n        },\r\n        setTotalPages: (state, { payload: pagesAmount }) => {\r\n            state.totalPages = pagesAmount;\r\n        },\r\n        setList: (state, { payload: list }) => {\r\n            state.itemsList = list;\r\n            state.isLoading = false;\r\n        },\r\n        setPeopleList: (state, { payload: peopleList }) => {\r\n            state.peopleList = peopleList;\r\n            state.isLoading = false;\r\n        },\r\n        setDetailItem: (state, { payload: item }) => {\r\n            state.detailItem = item;\r\n            state.isLoading = false;\r\n        },\r\n        fetchDataError: state => {\r\n            state.isLoading = false;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    setList,\r\n    fetchMoviesListData,\r\n    fetchPeopleListData,\r\n    fetchDataError,\r\n    setTotalPages,\r\n    fetchDetailedMovieData,\r\n    fetchDetailedPersonData,\r\n    setDetailItem,\r\n} = moviesBrowserSlice.actions;\r\n\r\nexport const selectMoviesBrowserState = state => state.moviesBrowser;\r\nexport const selectIsLoading = state => selectMoviesBrowserState(state).isLoading;\r\nexport const selectRequestType = state => selectMoviesBrowserState(state).requestType;\r\nexport const selectPage = state => selectMoviesBrowserState(state).page;\r\nexport const selectDetailId = state => selectMoviesBrowserState(state).detailId;\r\nexport const selectTotalPages = state => selectMoviesBrowserState(state).totalPages;\r\nexport const selectList = state => selectMoviesBrowserState(state).itemsList;\r\nexport const selectDetailItem = state => selectMoviesBrowserState(state).detailItem;\r\nexport const selectIsListEmpty = state => selectMoviesBrowserState(state).itemsList.length === 0;\r\n\r\n\r\nexport default moviesBrowserSlice.reducer;","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { fetchDetailedMovieData, selectDetailItem } from \"../moviesBrowserSlice\";\r\n\r\nconst MovieDetailPage = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchDetailedMovieData(id));\r\n    });\r\n    const movie = useSelector(selectDetailItem);\r\n    return (\r\n        <>\r\n            <img src={`https://image.tmdb.org/t/p/w200${movie.backdrop_path}`} alt={movie.title} />     \r\n        </>\r\n    );\r\n}\r\n\r\nexport default MovieDetailPage;","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { fetchDetailedPersonData, selectDetailItem } from \"../moviesBrowserSlice\";\r\n\r\nconst ActorDetailPage = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchDetailedPersonData(id));\r\n    });\r\n    const person = useSelector(selectDetailItem);\r\n    return (\r\n        <>\r\n            <img src={`https://image.tmdb.org/t/p/w200${person.profile_path}`} alt={person.name} /> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ActorDetailPage;","import styled from \"styled-components\";\r\n\r\nexport const ListHeader = styled.h1`\r\n    font-family: Poppins;\r\n    font-weight: 600;\r\n    font-size: 36px;\r\n    line-height: 1.2;\r\n    color: ${({ theme }) => theme.colors.headers};\r\n`;\r\n\r\nexport const ListGrid = styled.div`\r\n    display: grid;\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    grid-template-columns: repeat(${({columns}) => columns || 4}, 1fr);\r\n    gap: 24px;\r\n    justify-items: stretch;\r\n    align-items: stretch;\r\n`;","import { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toActor, toMovie } from \"../../../core/config/routes\";\r\nimport { selectList } from \"../moviesBrowserSlice\";\r\nimport { ListGrid, ListHeader } from \"./styled\";\r\n\r\nconst ListPage = ({ header, showPaginator, type }) => {\r\n    const list = useSelector(selectList);\r\n    return (\r\n        <>\r\n            <ListHeader> {header} </ListHeader>\r\n            <ListGrid columns={type === \"movies\" ? 4 : 6}>\r\n                {list && list.map(listItem => {\r\n                    return (<section>\r\n                        <Link to={\r\n                            type === \"movies\" ? toMovie(listItem) : toActor(listItem)\r\n                        }>\r\n                            <p>{type === \"movies\" ? listItem.title : listItem.name}</p>\r\n                        </Link>\r\n                    </section>);\r\n                })}\r\n            </ListGrid>\r\n            {showPaginator && <span>Paginator start page</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListPage;","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ListPage from \"../ListPage\";\r\nimport { fetchMoviesListData } from \"../moviesBrowserSlice\";\r\n\r\n\r\nconst MoviesListPage = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchMoviesListData(1));\r\n    });\r\n\r\n    return (\r\n        <ListPage header=\"Popular Movies \" showPaginator={true} type=\"movies\" />\r\n    );\r\n}\r\n\r\nexport default MoviesListPage;","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ListPage from \"../ListPage\";\r\nimport { fetchPeopleListData } from \"../moviesBrowserSlice\";\r\n\r\nconst ActorsListPage = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchPeopleListData(1));\r\n    });\r\n    return (\r\n        <ListPage header=\"Popular Actors \" showPaginator={true} columns=\"6\" type=\"people\" />\r\n    );\r\n}\r\n\r\nexport default ActorsListPage;","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const StyledNavigation = styled.nav`\r\n    width: 100%;\r\n    background-color: ${({ theme }) => theme.colors.navBackground};\r\n    left: 0%;\r\n    right: 0%;\r\n    top: 0%;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const NavigationList = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: max-content;\r\n    margin: 0;\r\n`;\r\n\r\n\r\n\r\nexport const StyledCameraIcon = styled.img`\r\n    width: 22px;\r\n    height: 23px;\r\n    border: 2.5px solid ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\nexport const StyledTitle = styled.h1`\r\n    color: ${({ theme }) => theme.colors.white};\r\n    position: absolute;\r\n    width: 168px;\r\n    height: 40px;\r\n    left: 52px;\r\n    top: calc(50% - 40px/2);\r\n    margin: 0;\r\n    font-family: Poppins;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    line-height: 40px;\r\n    letter-spacing: -1.5px;\r\n    text-transform: capitalize;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    border-radius: 33px;\r\n    position: absolute;\r\n    left: 0%;\r\n    right: 0%;\r\n    top: 0%;\r\n    bottom: 0%;\r\n    border: 1px solid ${({ theme }) => theme.colors.mystic};\r\n`;\r\n\r\nexport const InputIcon = styled.img`\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n`;\r\n\r\nexport const StyledNavWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\r\n    activeClassName: \"active\",\r\n}))`\r\n    color: ${({ theme }) => theme.colors.white};\r\n    text-decoration: none;\r\n    font-family: Poppins;\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n    text-transform: uppercase;\r\n    `;","import { NavigationList, StyledNavigation, StyledNavWrapper, StyledTitle, StyledNavLink, StyledInput } from \"./styled\";\r\nimport { toActorsList, toMoviesList } from \"../../core/config/routes\";\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <StyledNavigation>\r\n            <StyledNavWrapper>\r\n                <>StyledCameraIcon</>\r\n                {/*tu miejsce na ikonkę SVG kamery*/}\r\n                <StyledTitle>Movies Browser</StyledTitle>\r\n                <NavigationList>\r\n\r\n                    <StyledNavLink\r\n                        to={toMoviesList()}\r\n                    >\r\n                        Movies\r\n                    </StyledNavLink>\r\n\r\n\r\n                    <StyledNavLink\r\n                        to={toActorsList()}\r\n                    >\r\n                        People\r\n                    </StyledNavLink>\r\n\r\n                </NavigationList>\r\n                <StyledInput />\r\n                <>InputIcon</>\r\n                {/*tu będzie ikonka search SVG <>InputIcon */}\r\n                Search\r\n\r\n            </StyledNavWrapper>\r\n        </StyledNavigation>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n    width: 100%;\r\n    max-width: 1368px;\r\n    margin: auto;\r\n`;","const NotFound = () => {\r\n    return (\r\n        <>\r\n            Page Not Found\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import { Switch, Route, HashRouter, Redirect } from \"react-router-dom\";\r\nimport { toActor, toActorsList, toMovie, toMoviesList } from \"../../../core/config/routes\";\r\nimport MovieDetailPage from \"../MovieDetailPage\";\r\nimport ActorDetailPage from \"../ActorDetailPage\";\r\nimport MoviesListPage from \"../MoviesListPage\";\r\nimport ActorsListPage from \"../ActorsListPage\";\r\nimport Navigation from \"../../../common/Navigation\";\r\nimport { Main } from \"./styled\";\r\nimport NotFound from \"../../../common/NotFound\";\r\n\r\nconst MoviesBrowser = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Main>\r\n        <Switch>\r\n          <Route path={toMoviesList()} component={MoviesListPage} />  \r\n          <Route path={toMovie()} component={MovieDetailPage} />          \r\n          <Route path={toActorsList()} component={ActorsListPage} />\r\n          <Route path={toActor()} component={ActorDetailPage} />\r\n          <Route exact path=\"/\">\r\n            <Redirect to={toMoviesList()} />\r\n          </Route>\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </Main>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default MoviesBrowser;","const pallette = {\r\n    white: \"#FFFFFF\",\r\n    black: \"#000000\",\r\n    woodsmoke: \"#18181B\",\r\n}\r\n\r\nexport const theme = {\r\n    colors: {\r\n        bodyBackground: pallette.white,\r\n        navBackground: pallette.black,\r\n        navText: pallette.white,\r\n        headers: pallette.woodsmoke,\r\n    },\r\n    breakpoints: {\r\n        tabletPortrait: \"767px\",\r\n    }\r\n}","import { ThemeProvider } from \"styled-components\";\r\nimport { Normalize } from \"styled-normalize\";\r\nimport { GlobalStyles } from \"./GlobalStyles\";\r\nimport MoviesBrowser from \"../../features/moviesBrowser/MoviesBrowser\"\r\nimport { theme } from \"./theme\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Normalize />\r\n      <GlobalStyles />\r\n      <MoviesBrowser />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const getApiKey = (version) => {\r\n    switch (version) {\r\n        case \"v4\": return \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTllY2QwNWM1MGI3OGNkNTY3ZmQ4YmVmMjgxZWRjNiIsInN1YiI6IjYxNGUwNmI1MmY4ZDA5MDAyY2NhODBlYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.pwo2LLcLB__58mUpujtrxxGF-HE3izTvOZcpGj1bmcM\";\r\n        default: return \"b19ecd05c50b78cd567fd8bef281edc6\";\r\n    }\r\n}\r\n\r\nexport const fetchList = async (type, page) => {\r\n    let link = \"\"\r\n    switch (type) {\r\n        case \"people\": link = \"person/popular\"; break;\r\n        default: link = \"movie/popular\";\r\n    }\r\n    const response = await fetch(`https://api.themoviedb.org/3/${link}?api_key=${getApiKey()}&language=en-US&page=${page || 1}`);\r\n    if (!response.ok) {\r\n        new Error((response).statusText);\r\n    }\r\n    return await response.json();\r\n};\r\n\r\nexport const fetchDetails = async (type, id) => {\r\n    let link = \"\"\r\n    switch (type) {\r\n        case \"person\": link = \"person\"; break;\r\n        default: link = \"movie\";\r\n    }\r\n    const response = await fetch(`https://api.themoviedb.org/3/${link}/${id}?api_key=${getApiKey()}&language=en-US`);\r\n    if (!response.ok) {\r\n        new Error((response).statusText);\r\n    }\r\n    return await response.json();\r\n};","import { call, put, takeLatest, select } from \"redux-saga/effects\";\r\nimport { fetchList, fetchDetails } from \"../../common/api/apiQueries\";\r\nimport { selectPage } from \"./moviesBrowserSlice\";\r\nimport {\r\n    fetchDetailedMovieData,\r\n    fetchDetailedPersonData,\r\n    setList,\r\n    setDetailItem,\r\n    fetchMoviesListData,\r\n    fetchPeopleListData,\r\n    fetchDataError,\r\n    setTotalPages,\r\n    selectRequestType,\r\n    selectDetailId\r\n} from \"./moviesBrowserSlice\";\r\n\r\n\r\nfunction* fetchListHandler() {\r\n    try {\r\n        const page = yield select(selectPage);\r\n        const requestType = yield select(selectRequestType);\r\n        const list = yield call(fetchList, requestType, page);\r\n        yield put(setList(list.results));\r\n        yield put(setTotalPages(list.total_pages));\r\n    } catch (error) {\r\n        yield put(fetchDataError());\r\n        yield call(Error, error);\r\n    }\r\n}\r\n\r\nfunction* fetchDetailHandler() {\r\n    try {\r\n        const detail = yield select(selectDetailId);\r\n        const requestType = yield select(selectRequestType);\r\n        const detailedItem = yield call(fetchDetails, requestType, detail);\r\n        yield put(setDetailItem(detailedItem));\r\n    } catch (error) {\r\n        yield put(fetchDataError());\r\n        yield call(Error, error);\r\n    }\r\n}\r\n\r\nexport function* moviesBrowserSaga() {\r\n    yield takeLatest(fetchMoviesListData.type, fetchListHandler);\r\n    yield takeLatest(fetchPeopleListData.type, fetchListHandler);\r\n    yield takeLatest(fetchDetailedMovieData.type, fetchDetailHandler);\r\n    yield takeLatest(fetchDetailedPersonData.type, fetchDetailHandler);\r\n}","import { all } from \"@redux-saga/core/effects\";\r\nimport { moviesBrowserSaga } from \"../../features/moviesBrowser/moviesBrowserSaga\"\r\n\r\nfunction* rootSaga () {\r\n    yield all([\r\n        moviesBrowserSaga(),\r\n    ])\r\n}\r\n\r\nexport default rootSaga;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"@redux-saga/core\";\r\nimport rootSaga from \"./rootSaga\";\r\nimport moviesBrowserReducer from \"../../features/moviesBrowser/moviesBrowserSlice\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        moviesBrowser: moviesBrowserReducer,\r\n    },\r\n    middleware: [sagaMiddleware]\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './core/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from \"./core/config/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}